main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 19)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 0)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 15)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 25)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 1)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 3)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 4)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 5)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 6)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 7)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 8)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 9)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 10)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 9)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 11)             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 12 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 13 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 14 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 15 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 16 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 17 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 18 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 19 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 20 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 21 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 22 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 23 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 24 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 25 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 26 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 22 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 21 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 23 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 20 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음)
plot( mpg, wt,
main = 'wt-mpg graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mpg, wt,
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
# plot( ) : 산점도 그리는 함수
plot( wt, mpg,
main = 'wt-mpg graph',
xlab = 'weight',
ylab = 'mpg',
col = 'red',
pch = 20 )             # 'pch = 19' 모양을 결정 ( 1=원, 2=세모, 19=점 등 / 숫자 0~25번까지 있음 / help로 찾아 볼수 있음)
plot( mtcars$wt,
mtcars$mpg,
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mtcars$mpg,
mtcars$wt,
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mtcars[ , c( 'wt', 'mpg')],
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mtcars[ , c( 'wt', 'mpg')],
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mpg ~ wt,                    # c( 'wt', 'mpg' ) => x축은 'wt', y축은 'mpg'
data = mtcars
main = 'mpg-wt graph',       # c( 'mpg', 'wt' ) => x축은 'mpg', y축은 'wt'
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mpg ~ wt,                    # 'mpg ~ wt' => x축은 'wt', y축은 'mpg'
data = mtcars                # 'data = mtcars' => 데이터 지정
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mpg ~ wt,                    # 'mpg ~ wt' => x축은 'wt', y축은 'mpg'
data = mtcars                # 'data = mtcars' => 데이터 지정
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mtcars[ , c( 'wt', 'mpg')],  # c( 'wt', 'mpg' ) => x축은 'wt', y축은 'mpg'
main = 'mpg-wt graph',       # c( 'mpg', 'wt' ) => x축은 'mpg', y축은 'wt'
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
plot( mpg ~ wt,                    # 'mpg ~ wt' => x축은 'wt', y축은 'mpg'
data = mtcars,               # 'data = mtcars' => 데이터 지정
main = 'mpg-wt graph',
xlab = 'mpg',
ylab = 'weight',
col = 'red',
pch = 20 )
# 다변량에 대한 산점도 : 다변량 = 변수 2개 이상
var <- c( 'mpg', 'disp', 'dart', 'wt')
# 다변량에 대한 산점도 : 다변량 = 변수 2개 이상
vars <- c( 'mpg', 'disp', 'dart', 'wt')
target <- mtcars[ , vars ]
head( target )
# 다변량에 대한 산점도 : 다변량 = 변수 2개 이상
vars <- c( 'mpg', 'disp', 'drat', 'wt')
target <- mtcars[ , vars ]
head( target )
pair( target )
target <- mtcars[ , vars ]
head( target )
pairs( target, main = 'multi plot')
View( mtcars )
pairs( target, main = 'multi plot' )
plot( target, main = 'multi plot1' )
plot( iris.2,
main = 'iris plot',
pch = c( point ),
col = color[ point ] )
#   - 두 개의 변수에 대한 산점도를 작성할 때 그룹 정보를 알고 있다면 작성시, 각 그룹별 관측값에 대해
#     서로 다른색과 점의 모양으로 표시할 수 있다.
#   - 두 변수 간의 관계뿐만 아니라 그룹 간의 관계도 파악할 수 있다.
#
iris.2 <- iris[ , 3:4 ]
point <- as.numeric( iris$Species )
point
color <- c( 'red', 'green', 'blue' )
plot( iris.2,
main = 'iris plot',
pch = c( point ),
col = color[ point ] )
plot( iris.2,
main = 'iris plot',
pch = 20,
col = color[ point ] )
plot( iris.2,
main = 'iris plot',
pch = c( point ),
col = color[ point ] )
#   - 두 개의 변수에 대한 산점도를 작성할 때 그룹 정보를 알고 있다면 작성시, 각 그룹별 관측값에 대해
#     서로 다른색과 점의 모양으로 표시할 수 있다.
#   - 두 변수 간의 관계뿐만 아니라 그룹 간의 관계도 파악할 수 있다.
#
View( iris )
color <- c( 'black', 'green', 'gray' )
plot( iris.2,
main = 'iris plot',
pch = c( point ),
col = color[ point ] )
levels( iris$Species )
beers <- c( 5, 2, 9, 8, 3, 7, 3, 5, 3, 5 )
bal <- c( 0.1, 0.03, 0.19, 0.12, 0.04, 0.0095, 0.07, 0.06, 0.02, 0.05 )
tbl <- data.frame( beers, bal )
tbl
plot( bal ~ beers ,
data = tbl )
res <- lm( bal ~ beers,
data = tbl)
abline( res )
cor( beers, bal )
plot( bal ~ beers ,
data = tbl )
lm( bal ~ beers,
data = tbl)
abline( lm( bal ~ beers, data = tbl )
abline( lm( bal ~ beers, data = tbl )
cor( beers, bal )
beers <- c( 5, 2, 9, 8, 3, 7, 3, 5, 3, 5 )
bal <- c( 0.1, 0.03, 0.19, 0.12, 0.04, 0.0095, 0.07, 0.06, 0.02, 0.05 )
tbl <- data.frame( beers, bal )
tbl
plot( bal ~ beers ,
data = tbl )
abline( lm( bal ~ beers, data = tbl )
abline( res )
res <- lm( bal ~ beers,
data = tbl)
abline( res )
abline( lm( bal ~ beers, data = tbl )
plot( bal ~ beers ,
data = tbl )
plot( bal ~ beers ,
data = tbl )
beers <- c( 5, 2, 9, 8, 3, 7, 3, 5, 3, 5 )
bal <- c( 0.1, 0.03, 0.19, 0.12, 0.04, 0.0095, 0.07, 0.06, 0.02, 0.05 )
tbl <- data.frame( beers, bal )
tbl
plot( bal ~ beers ,
data = tbl )
cor( beers, bal )
#-------------------------------------------------------------------
par( mfrow = c( 1, 2) )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col - 'red',
pch = 20 )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col - 'red',
pch = 20 )
res <- lm( wt~mpg, data = mrcars )
abline( res )
abline( res )
plot( drat~wt,
data = mtcars,
main = '리어액슬기어비-중량 그래프',
col = 'red',
pch = 20 )
#-------------------------------------------------------------------
par( mfrow = c( 1, 2) )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col - 'red',
pch = 20 )
res <- lm( wt~mpg, data = mrcars )
abline( res )
plot( drat~wt,
data = mtcars,
main = '리어액슬기어비-중량 그래프',
col = 'red',
pch = 20 )
res <- lm( drat~wt, data = mtcars)
abline( res )
cor( mtcars$wt, mtcars$mpg )
cor( mtcars$wt, mtcars$mpg )
cor( mtcars$drat, mtcars$wt )
par( mfrow = c( 1, 1 ) )
cor( mtcars$wt, mtcars$mpg )
cor( mtcars$drat, mtcars$wt )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col - 'red',
pch = 20 )
#-------------------------------------------------------------------
par( mfrow = c( 1, 2 ) )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col = 'red',
pch = 20 )
par( mfrow = c( 1, 1 ) )
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col = 'red',
pch = 20 )
#-------------------------------------------------------------------
par( mfrow = c( 1, 2 ) )             # par( ) : 그래프를 나누어 출력하는 함수 => 그래프를 1 * 2로 출력하라.
plot( wt~mpg,
data = mtcars,
main = '중량-연비 그래프',
xlab = '중량',
ylab = '연비',
col = 'red',
pch = 20 )
res <- lm( wt~mpg, data = mrcars )  # lm( ) : 회귀식의 a, b를 구해주는 함수( y = ax + b)
abline( res )                       # 회귀선을 삽입하는 함수
plot( drat~wt,
data = mtcars,
main = '리어액슬기어비-중량 그래프',
col = 'red',
pch = 20 )
res <- lm( drat~wt, data = mtcars)
abline( res )
abline( res )                       # 회귀선을 삽입하는 함수
plot( drat~wt,
data = mtcars,
main = '리어액슬기어비-중량 그래프',
col = 'red',
pch = 20 )
res <- lm( drat~wt, data = mtcars)
abline( res )
par( mfrow = c( 1, 1 ) )
cor( iris[ , 1:4 ] )
view( cor( iris[ , 1:4 ] ) )
aaa <- cor( iris[ , 1:4 ] )
view( aaa
view( aaa )
cor( iris[ , 1:4 ] )
